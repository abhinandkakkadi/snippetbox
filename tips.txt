CREATE USER 'web'@'localhost';
GRANT SELECT, INSERT, UPDATE, DELETE ON snippetbox.* TO 'web'@'localhost';
-- Important: Make sure to swap 'pass' with a password of your own choosing.
ALTER USER 'web'@'localhost' IDENTIFIED BY 'pass';


 - create and give permission to new user



DB.Query() is used for SELECT queries which return multiple rows.
DB.QueryRow() is used for SELECT queries which return a single row.
DB.Exec() is used for statements which don’t return rows (like INSERT and DELETE).


WHEN USING CUSTOM TEMPLATE FUNCTION - CALLING FUNCTION FROM PARSED TEMPLATE


“<time>{{.Created | humanDate | printf "Created: %s"}}</time>” - we can do like this where humanDate is the custom function


ALICE middleware - middleware chain can be assigned to a variable 
“myChain := alice.New(myMiddlewareOne, myMiddlewareTwo)
myOtherChain := myChain.Append(myMiddleware3)
return myOtherChain.Then(myHandler)”


TLS CERTIFICATE
for production - use Let's encrypt to create TLS certificate
for development - use a self signed certificate, but it's not cryptographically signed by a trusted certificate authority
command to generate self signed RSA key pair - "go run /usr/local/go/src/crypto/tls/generate_cert.go --rsa-bits=2048 --host=localhost"
both private and public key are PEM encoded, which is standard format used by most TLS implementation
so from this we go a TLC certificate and a corresponding private key
